/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.shaunpark.kafka.connect;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Map;

import io.confluent.connect.storage.common.util.StringUtils;
import io.confluent.connect.storage.partitioner.TimeBasedPartitioner;

public class TopicPostfixPartitioner<T> extends TimeBasedPartitioner<T> {
    private static final Logger log = LoggerFactory.getLogger(TopicPostfixPartitioner.class);
    String topicPostfix = "";
    static String TOPIC_POSTFIX = "partitioner.topic.postfix";

    @Override
    public void configure(Map<String, Object> config) {
        super.configure(config);
        topicPostfix = (String) config.get(TOPIC_POSTFIX);      
        if (StringUtils.isBlank(topicPostfix)) {
            topicPostfix = "";
            log.info("Topic post fix is not set. use empty string");
        } else {
            log.info("Topic post fix is set: '" + topicPostfix+ "'");
        }
    }

    @Override
    public String generatePartitionedPath(String topic, String encodedPartition) {
        return topic + topicPostfix + delim + encodedPartition;  // The partitioned path should be unique for each topic, read disclaimer for more details.
    }
}